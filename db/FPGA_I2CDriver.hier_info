|i2c_master
clk => addr_rw[0].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => busy~reg0.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => data_clk.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => state~1.DATAIN
reset_n => scl_clk.ACLR
reset_n => data_clk_prev.ACLR
reset_n => data_clk.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => count[13].ACLR
reset_n => count[14].ACLR
reset_n => count[15].ACLR
reset_n => count[16].ACLR
reset_n => count[17].ACLR
reset_n => count[18].ACLR
reset_n => count[19].ACLR
reset_n => count[20].ACLR
reset_n => count[21].ACLR
reset_n => count[22].ACLR
reset_n => count[23].ACLR
reset_n => count[24].ACLR
reset_n => count[25].ACLR
reset_n => count[26].ACLR
reset_n => count[27].ACLR
reset_n => count[28].ACLR
reset_n => count[29].ACLR
reset_n => count[30].ACLR
reset_n => count[31].ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => busy~reg0.PRESET
reset_n => state~3.DATAIN
reset_n => addr_rw[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => Selector0.IN3
ena => Selector2.IN3
ena => Selector1.IN1
addr[0] => ~NO_FANOUT~
addr[1] => ~NO_FANOUT~
addr[2] => ~NO_FANOUT~
addr[3] => ~NO_FANOUT~
addr[4] => ~NO_FANOUT~
addr[5] => ~NO_FANOUT~
addr[6] => ~NO_FANOUT~
rw => addr_rw.DATAB
data_wr[0] => ~NO_FANOUT~
data_wr[1] => ~NO_FANOUT~
data_wr[2] => ~NO_FANOUT~
data_wr[3] => ~NO_FANOUT~
data_wr[4] => ~NO_FANOUT~
data_wr[5] => ~NO_FANOUT~
data_wr[6] => ~NO_FANOUT~
data_wr[7] => ~NO_FANOUT~
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= <GND>
data_rd[1] <= <GND>
data_rd[2] <= <GND>
data_rd[3] <= <GND>
data_rd[4] <= <GND>
data_rd[5] <= <GND>
data_rd[6] <= <GND>
data_rd[7] <= <GND>
ack_error <= <GND>
sda <> <GND>
scl <> scl


